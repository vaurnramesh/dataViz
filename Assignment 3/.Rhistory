geom_line(show.legend = F) +
facet_wrap(~type, scales = "free_y", labeller = as_labeller(label), shrink = TRUE) +
geom_vline(xintercept = 2006, color = "red",
linetype = "dotted", size = 1.3) +
labs(y = "")
plot1%>% ggplotly()
allPlots <- df %>%
group_by(year) %>%
mutate(
colNum.year = mean(numcol)) %>%
select(contains("year")) %>%
gather(key = "type", value = "value", -year)
label <- c(
"colNum.year" = "No. of Honey colonies"
)
plot1 <- allPlots %>%
ggplot(aes(x = year, y = value, group = type, color = type)) +
geom_line(show.legend = F) +
facet_wrap(~type, scales = "free_y", labeller = as_labeller(label), shrink = TRUE) +
geom_vline(xintercept = 2006, color = "red",
linetype = "dotted", size = 1.3) +
labs(y = "")
plot1%>% ggplotly()
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
p3 <- state.production <- df %>%
ggplot(aes(x = year, y = stocks, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Stock from 1998 to 2012 by each state") +
ylab("Stocks of Honey per State")+
xlab("Years ")
state.production %>% ggplotly()
df <- read.csv("honeyproduction.csv")
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(prodvalue))
map1$state <- abbr2state(map1$state)
highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(prodvalue))
map1$state <- abbr2state(map1$state)
x <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
splitLayout(cellWidths = c("50%"), dygraphOutput("state.production"), dygraphOutput("x"))
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
library(dygraphs)
install.packages("dygraphs")
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
library(dygraphs)
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(prodvalue))
map1$state <- abbr2state(map1$state)
x <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
splitLayout(cellWidths = c("50%"), dygraphOutput("state.production"), dygraphOutput("x"))
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(prodvalue))
map1$state <- abbr2state(map1$state)
highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
pricePerPound <- df %>%
ggplot(aes(x = year, y = priceperlb, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
pricePerPound %>% ggplotly()
yieldPerColony <- df %>%
ggplot(aes(x = year, y = yieldpercol, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
yieldPerColony %>% ggplotly()
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
df <- read.csv("honeyproduction.csv")
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
prod <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
tabBox(width=5,tabPanel("Tab1", prod), tabPanel("Tab2"), height = "450px")
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
require(shinydashboard)
require(shiny)
require(plotly)
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
prod <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
tabBox(width=5,tabPanel("Tab1", prod), tabPanel("Tab2"), height = "450px")
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
require(shinydashboard)
library(shiny)
require(plotly)
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
prod <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
tabBox(width=5,tabPanel("Tab1", prod), tabPanel("Tab2"), height = "450px")
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
prod <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
tabBox(width=5,tabPanel("Tab1", prod),height = "450px")
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
prod <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
tabBox(width=5,tabPanel("Tab1", prod),height = "450px")
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
prod <- highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
map1 <- df %>%
group_by(state) %>%
summarize(total = mean(totalprod))
map1$state <- abbr2state(map1$state)
highchart() %>%
hc_title(text = "Honey Production in the USA") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
install.packages("shinydashboard")
library(flexdashboard)
Foodemissions <- read_csv("Foodemissions.csv")
View(Foodemissions)
FE_df <- gather(Foodemissions, key= "criteria", value= "contribution" , Land_use:Retail)
FE_df
p <- ggplot(data = FE_df, aes(x = Food_product, y = contribution, fill = criteria))
p + geom_bar(stat= "identity",
width = 1,
color = "black",
size = 0.5,
alpha = 0.7) +
theme_minimal()+
theme(legend.position = "right", axis.text.x = element_text(angle = 90, hjust = 0.4)) +
labs(x= "Food product", y = "% Contribution", title = "Contribution of Food products in various Sectors") +
geom_text(aes(label = contribution), position = position_stack(vjust = 0.4), size = 2)
p %>% ggplotly()
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
library(shiny)
require(plotly)
plot_ly(shared_data, x = ~year, y = ~revenue,
color = ~state, colors = sample(colours(), 120),
type = 'scatter', mode = 'markers',
hoverinfo = 'text', text = ~paste("State: ", state, '<br>Year: ', year, "<br>Total Revenue: ", revenue)) %>%
add_trace(y = shared_data[['revenue']], mode = "lines+markers",
color = shared_data[['state']], line = list(shape = "linear"), inherit = FALSE) %>%
layout(showlegend = FALSE,
title = "Total Honey Revenue by state",
xaxis = list(title = "Year"),
yaxis = list(title = "Total Revenue in Millions")) %>%
layout(plot_bgcolor = 'transparent') %>%
layout(paper_bgcolor = 'transparent') %>%
add_markers() %>%
highlight("plotly_click")
# Create datatable.
datatable(shared_data,
rownames = FALSE,
colnames = c('state', 'Year', 'TotalRevenue in Millions'),
class = 'cell-border stripe',
extensions = "Scroller",
options=list(deferRender = FALSE,
scrollY = 200,
scrollCollapse = TRUE,
scroller = TRUE,
dom = 't'))
honeyProdTibble <- df %>%
select(state, year, totalprod, priceperlb) %>%
group_by(year, state) %>%
summarise(revenue = round((sum(totalprod) * sum(priceperlb))/1000000, 2))
shared_data <-  SharedData$new(honeyProdTibble, group = 'hello')
filter_slider("year", "Year", shared_data, ~year, step = 1)
filter_select("state", "State", shared_data, ~state, allLevels = TRUE, multiple = TRUE)
# Create datatable.
datatable(shared_data,
rownames = FALSE,
colnames = c('state', 'Year', 'TotalRevenue in Millions'),
class = 'cell-border stripe',
extensions = "Scroller",
options=list(deferRender = FALSE,
scrollY = 200,
scrollCollapse = TRUE,
scroller = TRUE,
dom = 't'))
honeyProdTibble <- df %>%
select(state, year, totalprod, priceperlb) %>%
group_by(year, state) %>%
summarise(revenue = round((sum(totalprod) * sum(priceperlb))/1000000, 2))
honeyProdTibble <-  SharedData$new(honeyProdTibble, group = 'hello')
filter_slider("year", "Year", ho, ~year, step = 1)
honeyProdTibble <- df %>%
select(state, year, totalprod, priceperlb) %>%
group_by(year, state) %>%
summarise(revenue = round((sum(totalprod) * sum(priceperlb))/1000000, 2))
honeyProdTibble <-  SharedData$new(honeyProdTibble, group = 'hello')
filter_slider("year", "Year", honeyProdTibble, ~year, step = 1)
filter_select("state", "State", honeyProdTibble, ~state, allLevels = TRUE, multiple = TRUE)
# Create datatable.
datatable(honeyProdTibble,
rownames = FALSE,
colnames = c('state', 'Year', 'TotalRevenue in Millions'),
class = 'cell-border stripe',
extensions = "Scroller",
options=list(deferRender = FALSE,
scrollY = 200,
scrollCollapse = TRUE,
scroller = TRUE,
dom = 't'))
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
library(shiny)
require(plotly)
map1 <- df %>%
group_by(state) %>%
summarize(total = round(mean(totalprod)),2)
map1$state <- abbr2state(map1$state)
highchart() %>%
hc_title(text = "Honey Production in the USA ") %>%
hc_subtitle(text = "Source: honeyproduction.csv") %>%
hc_add_series_map(usgeojson, map1,
name = "state",
value = "total",
joinBy = c("woename", "state")) %>%
hc_mapNavigation(enabled = T)
state.production <- df %>%
ggplot(aes(x = year, y = round(totalprod/1000000,2), color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
library(flexdashboard)
library(knitr)
library(DT)
library(rpivotTable)
library(ggplot2)
library(plotly)
library(dplyr)
library(openintro)
library(highcharter)
library(ggvis)
library(tidyverse)
library(crosstalk)
library(shiny)
require(plotly)
allPlots <- df %>%
group_by(year) %>%
mutate(
colNum.year = mean(numcol),
colYield.year = mean(yieldpercol),
totalprod.year = mean(totalprod),
totalStocks.year = mean(stocks),
priceperlb.year = mean(priceperlb),
totalProdValue.year = mean(prodvalue)) %>%
select(contains("year")) %>%
gather(key = "type", value = "value", -year)
label <- c(
"colNum.year" = "No. of Honey colonies",
"priceperlb.year" = "Average price per pound (USD)",
"totalProdValue.year" = "Total production value(USD)",
"totalStocks.year" = "Total Stocks (lbs)",
"totalprod.year" = "Total production (lbs)",
"colYield.year" = "Honey yield per colony (lbs)"
)
plot1 <- allPlots %>%
ggplot(aes(x = year, y = value, group = type, color = type)) +
geom_line(show.legend = F) +
facet_wrap(~type, scales = "free_y", labeller = as_labeller(label), shrink = TRUE) +
labs(y = "")
plot1%>% ggplotly()
allPlots <- df %>%
group_by(year) %>%
mutate(
colNum.year = mean(numcol),
colYield.year = mean(yieldpercol),
totalprod.year = mean(totalprod),
totalStocks.year = mean(stocks),
priceperlb.year = mean(priceperlb),
totalProdValue.year = mean(prodvalue)) %>%
select(contains("year")) %>%
gather(key = "type", value = "value", -year)
label <- c(
"colNum.year" = "No. of Honey colonies",
"priceperlb.year" = "Average price per pound (USD)",
"totalProdValue.year" = "Total production value(USD)",
"totalStocks.year" = "Total Stocks (lbs)",
"totalprod.year" = "Total production (lbs)",
"colYield.year" = "Honey yield per colony (lbs)"
)
plot1 <- allPlots %>%
ggplot(aes(x = year, y = value, group = type, color = type)) +
geom_line(show.legend = F) +
facet_wrap(~type, scales = "free_y", labeller = as_labeller(label), shrink = TRUE) +
labs(y = "")
plot1%>% ggplotly()
View(df)
View(df)
state.production <- df %>%
ggplot(aes(x = year, y = totalprod/1000000, color = state)) +
geom_smooth(show.legend = T, se = FALSE) +
labs(title = "Honey Production from 1998 to 2012 by each state") +
ylab("Total Production in Millions")+
xlab("Years ")
state.production %>% ggplotly()
